The PCjs simulation above is limited to a maximum simulated clock speed of 4.77Mhz. When the simulation is unlimited (click the "Fast" button twice), it can reach simulated clock speeds over 80Mhz (tested on a 3.4Ghz Intel Core i7). However, speed is very dependent on the browser. Safari performs best, initially reaching 60Mhz, and then after a minute or so, jumping to 80Mhz. Firefox and IE9/IE10 are more consistent, with speeds just over 60Mhz.

Chrome, surprisingly, is the outlier. It never exceeds a simulated clock speed of 20Mhz. I tried to discover what Chrome wasn't happy about (/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --js-flags="--trace_opt --trace_deopt") and it reports lots of "deopts," but it wasn't enough information, for me at least, to determine what Chrome's issue(s) were.

Anyway, the simulation is fully functional on all modern browsers (that I've tested). It's booting the original IBM PC Model 5150 ROM BIOS (no modifications), and it's loading the original MDA/CGA fonts. This configuration gives you more control, allowing you to toggle any of the SW1/SW2 settings to change the memory configuration, the installed video card (MDA or CGA), and the number of diskette drives. There's also a built-in debugger with lots of DEBUG-like commands, only better. And you can create your own configuration by tweaking the underlying XML file. I'll eventually do a write-up explaining how to embed it on your own web page and what options are available. The process is very similar to embedding the C1Pjs simulation that I wrote earlier this year--the XML is just a little different.
