In the summer of 1998, when Larry Page and Sergey Brin were drafting an official business plan for the company they hoped to build around their Google search engine, they asked Guido Appenzeller for a little help.

Like Page and Brin, Appenzeller was a Ph.D. student in the computer science department at California’s Stanford University, and the way he tells it, Page and Brin knocked on his door only because he’d taken a class at the business school. His first suggestion was that they write their business plan with Microsoft Word — not with the HTML webpage editor they were inclined to use. “We hacked on it for about two afternoons,” Appenzeller remembers, “and that was all I ever did for them.”

But that’s not quite true. Yes, over the next several years, as Google grew into the web’s most dominant force, Appenzeller merely watched from afar. He finished his Stanford degree and founded a startup of his own. But that bit of help with the Google business plan isn’t all he ever did for Page and Brin. In 2008, after returning to Stanford as a professor and researcher, Appenzeller oversaw the development of OpenFlow, an open source networking technology that soon reinvented the way Google shuttles traffic across its worldwide web empire.

This is no small thing. To support its myriad web services — from search to Gmail to the G Drive — Google now operates nine of its own data centers in the US and Europe. It leases space in an untold number of other facilities across the globe. And this sweeping network of data centers is widely regarded as the most sophisticated operation on the net. According to Urs Hölzle — the Grand Poobah of the Googlenet — OpenFlow is the most significant change to the networking game since he first came to Google more than a decade ago.

In the simplest of terms, OpenFlow lets you program networking equipment in much the same you program computers, smartphones, and tablets. Rob Sherwood, who worked on OpenFlow alongside Appenzeller at Stanford, says the technology remake networking in much the same ways the Android and Apple app stores remade cell phones.

OpenFlow lets you write your own networking software rather than relying on the very limited — and proprietary — software that traditionally drives our networking gear. “It’s essentially a transition from something that is closed to a very open ecosystem,” says Appenzeller. “It’s like the transition from those Nokia cell phones of ten years ago — or, before that, from the mainframe.”

Now, with Google blazing the trail, Appenzeller is leading others towards this new world of programmable networks. In 2010, together with Kyle Forster, another former Stanford graduate student who kept an office just down the hall from him at the university, he founded Big Switch Networks, a company that specializes in OpenFlow. On Tuesday, the startup officially unveiled a broad collection of OpenFlow software tools, and Appenzeller tells us these tools have already been deployed inside big name companies — though he declines to name them.

It’s a story we hear time and again: Google is forced to reinvent its online operation as it juggles increasingly enormous amounts of data, and then its work trickles down to the rest of the industry. But this time, the story is playing out a little differently — and perhaps a bit quicker. The difference is that OpenFlow is open source technology that originated outside the web giant, and it’s already backed by a wide range of software and hardware vendors, including startups such as Big Switch and Nicira as well as established names like HP, Cisco, and Juniper.

OpenFlow traces its roots back to a man named Martin Casado. And, yes, he too was a Stanford student.

With his Stanford Ph.D. thesis, published in 2007, Casado described a new-age networking architecture he called Ethane. It was the beginning of a movement dubbed “software-defined networking,” or SDN. That isn’t the best of names, and as more and more companies leap on the bandwagon, it loses meaning by the day, but the basic idea isn’t hard to grasp. SDN seeks to provide a better way of controlling computer networks.

Today, we manage our networks using proprietary software provided by the company that built our switches, routers, and other networking gear — i.e. Cisco or Juniper or HP — and this isn’t easiest of tasks. Raymie Stata, the former chief technology officer of Yahoo, compares a complex computer network to the 15-Puzzle game, that old pastime where you try to organize 15 sliding tiles inside a square with space for only 16. But SDN aims to change this, by making networks more programmable.

“Software-defined networking is applying modularity to network control,” Scott Shenker, a University of California, Berkeley professor who worked with Casado on his Ethane dissertation, told us earlier this year.

“Modularity is something every software designer does in their sleep. If a program isn’t modular, it’s just spaghetti code. Software-defined networking asks what are the right software abstractions that let us structure the network control plane so it’s evolvable, so it’s not just a bunch of spaghetti code.”

In 2007, Casado, Shenker, and Casado’s other advisor, Stanford professor Nick McKeown, founded a networking startup called Nicira. The company applied the Ethane idea to virtual networks — networks that exist only a software — and it found a certain amount of success. In July, virtual server kingpin VMware paid $1.26bn to acquire the tiny Silicon Valley outfit. But as McKeown explains it, he and his co-founders were also interested creating an open source technology with a much wider reach.

“We really felt — and I in particular felt — that it was important to build an open ecosystem that was much more than just one individual company like Nicira,” McKeown says. “Nicira was working on network virtualization, but we felt that software-defined networking had applications across networking as a whole.”

The result was OpenFlow, an open source protocol for remotely managing network gear. Nicira used the protocol to control virtual network switches and build virtual networks you can configure independently of the hardware running beneath them, but OpenFlow can also help manage the hardware itself, including physical switches.

Back at Stanford, McKeown hired Guido Appenzeller — another former student of his — to oversee the OpenFlow’s continued development and help get the rest of the industry behind the project, including hardware makers. You can’t use OpenFlow to manage hardware unless you build it into that hardware.

Hardware makers HP, Cisco, Juniper, and NEC soon backed the project, and so did Google. “We were already going down that path, working on an inferior way of doing software-defined networking,” Google’s Urs Hölzle told Wired this spring. “But once we looked at OpenFlow, it was clear that this was the way to go. Why invent your own if you don’t have to?”

Google now uses OpenFlow to control the hardware that shuttles network traffic between its massive data centers, and odds are, it does much the same inside its data centers as well. The company built its own OpenFlow hardware and software — with some help from outsiders — but the market has now evolved to the point where you don’t have to. Due in part to Appenzeller’s work at Stanford, the likes of Cisco, Juniper, and Arista offer commercial OpenFlow hardware, and his Big Switch Networks is among those offering software that oversees this gear.

Like Nicira, Big Switch sells a network controller — aka software that oversees your network. But unlike the Nicira controller, the Big Switch tool lets you manage both virtual and physical gear. “Virtual networking only solves half the problem. It’s not like physical switches are going to disappear in the data center,” Appenzeller says. “You want to manage one network — the virtual and the physical.”

Virtual networking isn’t an easy thing to grasp. But the basic idea is that you can handle the most complex aspects of your network in software rather than hardware. This includes security, and the way networking packets are routed. Using controllers from the likes of Nicira and Big Switch, you can benefit from OpenFlow without buying OpenFlow hardware.

But as you start to upgrade your hardware, the BigSwitch controller lets you manage this as well. Yes, it’s confusing. But it’s also where the networking world is going. In all likelihood, Nicira will also offer software for controlling physical OpenFlow gear. After all, it helped build the controller that oversees the hardware moving traffic between Google’s data centers.

Appenzeller and Big Switch also offer a network “tap” for analyzing network traffic and an open source controller called FloodLight that lets anyone build their own OpenFlow applications.

These tools have a least sparked the interest of two other outfits that oversee some of the world’s largest online operations: the financial giants Goldman Sachs and Fidelity. Both are quoted in the company’s press materials, though neither goes so far as to say it’s actually using OpenFlow or Big Switch software.

When it officially launched this past February, Nicira said its tools were used by several big name operations, including Fidelity as well as AT&T, eBay, Japanese telecom NTT, and Rackspace, the chief rival to Amazon in the cloud computing game. Both Rackspace and eBay have spoken to us about their use of Nicira’s technology, and though Big Switch customers aren’t yet talking, they do exist.

While at Stanford, Appenzeller also helped bootstrapped the Open Network Foundation, the not-for-profit consortium that now oversees OpenFlow, and its board now includes names from Facebook, Microsoft, and Goldman Sachs. Facebook has yet to make the move to OpenFlow, but the others may be well down that road. Where Google goes, others follow.
